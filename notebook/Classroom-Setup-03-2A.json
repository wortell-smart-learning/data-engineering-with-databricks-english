{
	"name": "Classroom-Setup-03-2A",
	"properties": {
		"folder": {
			"name": "Includes"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "15d4e2ed-df4c-4d4b-83c8-d908016b2ed0"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"%run ./_utility-methods"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"DA = DBAcademyHelper(**helper_arguments) # Create the DA object\n",
					"DA.reset_environment()                   # Reset by removing databases and files from other lessons\n",
					"DA.init(install_datasets=True,           # Initialize, install and validate the datasets\n",
					"        create_db=True)                  # Continue initialization, create the user-db\n",
					"\n",
					"# Clean out the global_temp database.\n",
					"for row in spark.sql(\"SHOW TABLES IN global_temp\").select(\"tableName\").collect():\n",
					"    table_name = row[0]\n",
					"    spark.sql(f\"DROP TABLE global_temp.{table_name}\")\n",
					"\n",
					"DA.conclude_setup()                      # Conclude setup by advertising environmental changes\n",
					""
				],
				"execution_count": null
			}
		]
	}
}