{
	"name": "Classroom-Setup-07-1",
	"properties": {
		"folder": {
			"name": "includes"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "eb55fbc1-0011-463e-ba82-e8fa6342f9a1"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"%run ./_utility-methods"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"class DataFactory:\n",
					"    def __init__(self):\n",
					"        self.source = f\"{DA.paths.datasets}/healthcare/tracker/streaming\"\n",
					"        self.userdir = DA.paths.data_landing_location\n",
					"        self.curr_mo = 1\n",
					"    \n",
					"    def load(self, continuous=False):\n",
					"        if self.curr_mo > 12:\n",
					"            print(\"Data source exhausted\\n\")\n",
					"        elif continuous == True:\n",
					"            while self.curr_mo <= 12:\n",
					"                curr_file = f\"{self.curr_mo:02}.json\"\n",
					"                target_dir = f\"{self.userdir}/{curr_file}\"\n",
					"                print(f\"Loading the file {curr_file} to the {target_dir}\")\n",
					"                dbutils.fs.cp(f\"{self.source}/{curr_file}\", target_dir)\n",
					"                self.curr_mo += 1\n",
					"        else:\n",
					"            curr_file = f\"{str(self.curr_mo).zfill(2)}.json\"\n",
					"            target_dir = f\"{self.userdir}/{curr_file}\"\n",
					"            print(f\"Loading the file {curr_file} to the {target_dir}\")\n",
					"\n",
					"            dbutils.fs.cp(f\"{self.source}/{curr_file}\", target_dir)\n",
					"            self.curr_mo += 1\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"DA = DBAcademyHelper(**helper_arguments)\n",
					"DA.reset_environment()\n",
					"DA.init(install_datasets=True, create_db=True)\n",
					"\n",
					"DA.paths.data_landing_location    = f\"{DA.paths.working_dir}/source/tracker\"\n",
					"\n",
					"DA.data_factory = DataFactory()\n",
					"DA.conclude_setup()\n",
					"\n",
					"sqlContext.setConf(\"spark.sql.shuffle.partitions\", spark.sparkContext.defaultParallelism)\n",
					""
				],
				"execution_count": null
			}
		]
	}
}