{
	"name": "example-setup",
	"properties": {
		"folder": {
			"name": "01 - Synapse Workspace and Services/ExampleSetupFolder"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "34b2040c-4422-43f0-8780-3e2c39eb846a"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"%run ../../Includes/_utility-methods"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"DA = DBAcademyHelper(**helper_arguments) # Create the DA object\n",
					"DA.reset_environment()                   # Reset by removing databases and files from other lessons\n",
					"DA.init(install_datasets=True,           # Initialize, install and validate the datasets\n",
					"        create_db=False)                 # Continue initialization, create the user-db\n",
					"DA.conclude_setup()                      # Conclude setup by advertising environmental changes"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"# TODO\n",
					"my_name = None"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"example_df = spark.range(16)\n",
					""
				],
				"execution_count": null
			}
		]
	}
}