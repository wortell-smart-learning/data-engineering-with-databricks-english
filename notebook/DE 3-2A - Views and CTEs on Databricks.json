{
	"name": "DE 3-2A - Views and CTEs on Databricks",
	"properties": {
		"folder": {
			"name": "03 - Relational Entities on Databricks"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "9071c3c1-8c9c-4403-bc05-f47b8ec75496"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_sparksql",
				"display_name": "sql"
			},
			"language_info": {
				"name": "sql"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"%md-sandbox\n",
					"\n",
					"<div style=\"text-align: center; line-height: 0; padding-top: 9px;\">\n",
					"  <img src=\"https://databricks.com/wp-content/uploads/2018/03/db-academy-rgb-1200px.png\" alt=\"Databricks Learning\" style=\"width: 600px\">\n",
					"</div>"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md <i18n value=\"73b4cbc8-b2b3-4d51-8443-0280a10127e9\"/>\n",
					"\n",
					"\n",
					"# Views and CTEs on Databricks\n",
					"In this demonstration, you will create and explore views and common table expressions (CTEs).\n",
					"\n",
					"## Learning Objectives\n",
					"By the end of this lesson, you should be able to:\n",
					"* Use Spark SQL DDL to define views\n",
					"* Run queries that use common table expressions\n",
					"\n",
					"\n",
					"\n",
					"**Resources**\n",
					"* <a href=\"https://docs.databricks.com/spark/latest/spark-sql/language-manual/sql-ref-syntax-ddl-create-view.html\" target=\"_blank\">Create View - Databricks Docs</a>\n",
					"* <a href=\"https://docs.databricks.com/spark/latest/spark-sql/language-manual/sql-ref-syntax-qry-select-cte.html\" target=\"_blank\">Common Table Expressions - Databricks Docs</a>"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md <i18n value=\"c297b643-5e56-4ed9-928a-b4261b206461\"/>\n",
					"\n",
					"\n",
					"## Classroom Setup\n",
					"The following script clears out previous runs of this demo and configures some Hive variables that will be used in our SQL queries."
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%run ../Includes/Classroom-Setup-03.2A"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md <i18n value=\"f94b665d-e3c5-4dc7-8f40-6e892bdbe71a\"/>\n",
					"\n",
					" \n",
					"We start by creating a table of data we can use for the demonstration."
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"-- mode \"FAILFAST\" will abort file parsing with a RuntimeException if any malformed lines are encountered\n",
					"CREATE TABLE external_table\n",
					"USING CSV OPTIONS (\n",
					"  path = '${da.paths.datasets}/flights/departuredelays.csv',\n",
					"  header = \"true\",\n",
					"  mode = \"FAILFAST\"\n",
					");\n",
					"\n",
					"SELECT * FROM external_table;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md <i18n value=\"8bc49e5c-12e9-4458-90aa-88b67091f6f7\"/>\n",
					"\n",
					"\n",
					"\n",
					"To show a list of tables (and views), we use the **`SHOW TABLES`** command also demonstrated below."
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"SHOW TABLES;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md <i18n value=\"b80b82c4-c65f-47fe-8968-4c3051f59ba1\"/>\n",
					"\n",
					"\n",
					"\n",
					"## Views, Temp Views & Global Temp Views\n",
					"\n",
					"To set this demonstration up, we are going to first create one of each type of view.\n",
					"\n",
					"Then in the next notebook, we will explore the differences between how each one behaves."
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md <i18n value=\"ead94707-a156-4282-9f11-b4976c39470d\"/>\n",
					"\n",
					"\n",
					"### Views\n",
					"Let's create a view that contains only the data where the origin is \"ABQ\" and the destination is \"LAX\"."
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"CREATE VIEW view_delays_abq_lax AS\n",
					"  SELECT * \n",
					"  FROM external_table \n",
					"  WHERE origin = 'ABQ' AND destination = 'LAX';\n",
					"\n",
					"SELECT * FROM view_delays_abq_lax;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md <i18n value=\"f7cc0d7b-eb93-406a-8925-60ea057466ea\"/>\n",
					"\n",
					" \n",
					" \n",
					"Note that the **`view_delays_abq_lax`** view has been added to the list below:"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"SHOW TABLES;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md <i18n value=\"6badc00c-9bf4-47cb-aac8-a474d678e4f6\"/>\n",
					"\n",
					" \n",
					"### Temporary Views\n",
					"\n",
					"Next we'll create a temporary view. \n",
					"\n",
					"The syntax is very similar but adds **`TEMPORARY`** to the command."
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"CREATE TEMPORARY VIEW temp_view_delays_gt_120\n",
					"AS SELECT * FROM external_table WHERE delay > 120 ORDER BY delay ASC;\n",
					"\n",
					"SELECT * FROM temp_view_delays_gt_120;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md <i18n value=\"b19e8641-b379-4bab-83e7-3aff6dacd8ec\"/>\n",
					"\n",
					"\n",
					"\n",
					"Now if we show our tables again, we will see the one table and both views.\n",
					"\n",
					"Make note of the values in the **`isTemporary`** column."
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"SHOW TABLES;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md <i18n value=\"7ac13dd9-3f9f-4a41-8945-3405d7a1e86a\"/>\n",
					"\n",
					"\n",
					"\n",
					"### Global Temp Views\n",
					"\n",
					"Lastly, we'll create a global temp view. \n",
					"\n",
					"Here we simply add **`GLOBAL`** to the command. \n",
					"\n",
					"Also note the **`global_temp`** database qualifer in the subsequent **`SELECT`** statement."
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"CREATE GLOBAL TEMPORARY VIEW global_temp_view_dist_gt_1000 \n",
					"AS SELECT * FROM external_table WHERE distance > 1000;\n",
					"\n",
					"SELECT * FROM global_temp.global_temp_view_dist_gt_1000;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md <i18n value=\"83ab4417-60d5-4077-8947-ad53d6eb1dce\"/>\n",
					"\n",
					"\n",
					"\n",
					"Before we move on, review one last time the database's tables and views..."
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"SHOW TABLES;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md <i18n value=\"acf19ac9-f423-4ce6-85c1-e313672645e2\"/>\n",
					"\n",
					"\n",
					"\n",
					"...and the tables and views in the **`global_temp`** database:"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"SHOW TABLES IN global_temp;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md <i18n value=\"4b98c78a-c415-4a5c-a4cc-980d28e216b7\"/>\n",
					"\n",
					"\n",
					"\n",
					"Next we are going to demonstrate how tables and views are persisted across multiple sessions and how temp views are not.\n",
					"\n",
					"To do this simply open the next notebook, [DE 3.2B - Views and CTEs on Databricks, Cont]($./DE 3.2B - Views and CTEs on Databricks, Cont), and continue with the lesson.\n",
					"\n",
					"<img src=\"https://files.training.databricks.com/images/icon_note_24.png\"> Note: There are several scenarios in which a new session may be created:\n",
					"* Restarting a cluster\n",
					"* Detaching and reataching to a cluster\n",
					"* Installing a python package which in turn restarts the Python interpreter\n",
					"* Or simply opening a new notebook"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"%md-sandbox\n",
					"&copy; 2022 Databricks, Inc. All rights reserved.<br/>\n",
					"Apache, Apache Spark, Spark and the Spark logo are trademarks of the <a href=\"https://www.apache.org/\">Apache Software Foundation</a>.<br/>\n",
					"<br/>\n",
					"<a href=\"https://databricks.com/privacy-policy\">Privacy Policy</a> | <a href=\"https://databricks.com/terms-of-use\">Terms of Use</a> | <a href=\"https://help.databricks.com/\">Support</a>"
				],
				"execution_count": null
			}
		]
	}
}