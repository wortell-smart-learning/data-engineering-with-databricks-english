{
	"name": "DE 9-1-3 - DLT Job",
	"properties": {
		"folder": {
			"name": "09 - Task Orchestration with Jobs/DE 9.1 - Scheduling Tasks with the Jobs UI"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "cdccf3ce-9533-4748-a5ff-05697bb9b979"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_sparksql",
				"display_name": "sql"
			},
			"language_info": {
				"name": "sql"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"%run ../../Includes/Classroom-Setup-09.1.3"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"CREATE OR REFRESH STREAMING LIVE TABLE sales_orders_raw\n",
					"COMMENT \"The raw sales orders, ingested from retail-org/sales_orders.\"\n",
					"AS\n",
					"SELECT * FROM cloud_files(\"${datasets_path}/retail-org/sales_orders/\", \"json\", map(\"cloudFiles.inferColumnTypes\", \"true\"))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"CREATE OR REFRESH STREAMING LIVE TABLE customers\n",
					"COMMENT \"The customers buying finished products, ingested from retail-org/customers.\"\n",
					"AS SELECT * FROM cloud_files(\"${datasets_path}/retail-org/customers/\", \"csv\");"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"CREATE OR REFRESH STREAMING LIVE TABLE sales_orders_cleaned(\n",
					"  CONSTRAINT valid_order_number EXPECT (order_number IS NOT NULL) ON VIOLATION DROP ROW\n",
					")\n",
					"COMMENT \"The cleaned sales orders with valid order_number(s) and partitioned by order_datetime.\"\n",
					"AS\n",
					"SELECT f.customer_id, f.customer_name, f.number_of_line_items, \n",
					"  TIMESTAMP(from_unixtime((cast(f.order_datetime as long)))) as order_datetime, \n",
					"  DATE(from_unixtime((cast(f.order_datetime as long)))) as order_date, \n",
					"  f.order_number, f.ordered_products, c.state, c.city, c.lon, c.lat, c.units_purchased, c.loyalty_segment\n",
					"  FROM STREAM(LIVE.sales_orders_raw) f\n",
					"  LEFT JOIN LIVE.customers c\n",
					"      ON c.customer_id = f.customer_id\n",
					"     AND c.customer_name = f.customer_name"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"CREATE OR REFRESH LIVE TABLE sales_order_in_la\n",
					"COMMENT \"Sales orders in LA.\"\n",
					"AS\n",
					"SELECT city, order_date, customer_id, customer_name, ordered_products_explode.curr, SUM(ordered_products_explode.price) as sales, SUM(ordered_products_explode.qty) as quantity, COUNT(ordered_products_explode.id) as product_count\n",
					"FROM (\n",
					"  SELECT city, order_date, customer_id, customer_name, EXPLODE(ordered_products) as ordered_products_explode\n",
					"  FROM LIVE.sales_orders_cleaned \n",
					"  WHERE city = 'Los Angeles'\n",
					"  )\n",
					"GROUP BY order_date, city, customer_id, customer_name, ordered_products_explode.curr"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"CREATE OR REFRESH LIVE TABLE sales_order_in_chicago\n",
					"COMMENT \"Sales orders in Chicago.\"\n",
					"AS\n",
					"SELECT city, order_date, customer_id, customer_name, ordered_products_explode.curr, SUM(ordered_products_explode.price) as sales, SUM(ordered_products_explode.qty) as quantity, COUNT(ordered_products_explode.id) as product_count\n",
					"FROM (\n",
					"  SELECT city, order_date, customer_id, customer_name, EXPLODE(ordered_products) as ordered_products_explode\n",
					"  FROM LIVE.sales_orders_cleaned \n",
					"  WHERE city = 'Chicago'\n",
					"  )\n",
					"GROUP BY order_date, city, customer_id, customer_name, ordered_products_explode.curr\n",
					""
				],
				"execution_count": null
			}
		]
	}
}